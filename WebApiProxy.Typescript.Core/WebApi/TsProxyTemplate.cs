// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 15.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace WebApiProxy.Typescript.Core.WebApi
{
    using System.Text;
    using System.Linq;
    using System.Collections.Generic;
    using WebApiProxy;
    using WebApiProxy.Core;
    using WebApiProxy.TypeScript;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public partial class TsProxyTemplate : TsProxyTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            
            #line 11 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
try {
            
            #line default
            #line hidden
            
            #line 12 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

	var metaDataProvider = new MetaDataLocalProvider();
	var Metadata = metaDataProvider.GetMetadata();

            
            #line default
            #line hidden
            this.Write(@"
//------------------------------------------------------------------------------
//<auto-generated>
//  This file is auto-generated by WebApiProxy
//  Project site: http://github.com/faniereynders/webapiproxy
//  
//  Any changes to this file will be overwritten
//</auto-generated>
//------------------------------------------------------------------------------

module Api {
	//Models ");
            
            #line 27 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Metadata.Models.Count()));
            
            #line default
            #line hidden
            this.Write("\r\n\t");
            
            #line 28 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 foreach(var model in Metadata.Models.ToList()) { 
		if (model.Type!="enum") {
            
            #line default
            #line hidden
            this.Write("\t\texport interface ");
            
            #line 30 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write(" {\r\n\t\t\t");
            
            #line 31 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 foreach (var param in model.Properties) { 
				if (Extensions.IsValid(param.Type)) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t");
            
            #line 33 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name + (Extensions.IsNullable(param.Type) ? "?" : "")));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 33 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Extensions.HandleType(param.Type)));
            
            #line default
            #line hidden
            this.Write(";\r\n\t\t\t\t");
            
            #line 34 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 }
				} 
            
            #line default
            #line hidden
            this.Write(" \r\n\t\t}\r\n\t\t");
            
            #line 37 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 } else { 
            
            #line default
            #line hidden
            this.Write(" \r\n\t\t\texport enum ");
            
            #line 38 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(model.Name));
            
            #line default
            #line hidden
            this.Write(" {\r\n\t\t\t\t");
            
            #line 39 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 foreach (var param in model.Properties) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t");
            
            #line 40 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name));
            
            #line default
            #line hidden
            this.Write("= ");
            
            #line 40 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Description));
            
            #line default
            #line hidden
            this.Write(",\r\n\t\t\t\t");
            
            #line 41 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" \r\n\t\t\t}\r\n\t\t");
            
            #line 43 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 44 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" \r\n\r\n\t//Namespaces ");
            
            #line 46 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Metadata.Definitions.Count()));
            
            #line default
            #line hidden
            this.Write("\r\n\t");
            
            #line 47 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 foreach(var definition in Metadata.Definitions) { 
            
            #line default
            #line hidden
            this.Write("\t\texport namespace ");
            
            #line 48 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(definition.Name));
            
            #line default
            #line hidden
            this.Write(" {\r\n\t\t\t");
            
            #line 49 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

			var methods = Extensions.GetMethods(definition.ActionMethods);
			
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t");
            
            #line 53 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 foreach(var method in methods) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t");
            
            #line 54 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

					
					var url = ("\"" + method.Url.Replace("{", "\" + ").Replace("}", " + \"") + "\"").Replace(" + \"\"","");
				
					var funcType = Extensions.HandleType(method.ReturnType);
					var allParameters = method.UrlParameters.ToList();
				
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\r\n\r\n\t\t\t\texport function get");
            
            #line 63 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.Name));
            
            #line default
            #line hidden
            this.Write("Url(");
            
            #line 63 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

					foreach(var param in allParameters) {
							var paramType = Extensions.HandleType(param.Type);
						
            
            #line default
            #line hidden
            
            #line 66 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name + (Extensions.IsNullable(param.Type) || (param.IsOptional && Extensions.IsNullable(param.Type)) ? "?" : "") + ": " + paramType + (param.IsOptional && !Extensions.IsNullable(param.Type) ? " = " + Extensions.Default(param.Type) : "")));
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 66 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 }  
            
            #line default
            #line hidden
            
            #line 66 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

						if (method.BodyParameter != null) {
							var param = method.BodyParameter;
							var bodyType = Extensions.HandleType(param.Type);
						
            
            #line default
            #line hidden
            
            #line 70 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name + (Extensions.IsNullable(param.Type) || (param.IsOptional && Extensions.IsNullable(param.Type)) ? "?" : "") + ": " + bodyType + (param.IsOptional && !Extensions.IsNullable(param.Type) ? " = " + Extensions.Default(param.Type) : "")));
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 70 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
					
            
            #line default
            #line hidden
            this.Write(" options?: any): string  {\r\n\t\t\t\t\t");
            
            #line 72 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 foreach(var param in allParameters) { 
							if (!Extensions.IsBaseType(param.Type)) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t");
            
            #line 74 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name));
            
            #line default
            #line hidden
            this.Write(" = ");
            
            #line 74 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name));
            
            #line default
            #line hidden
            this.Write(" || <");
            
            #line 74 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Extensions.HandleType(param.Type)));
            
            #line default
            #line hidden
            this.Write("> {};\r\n\t\t\t\t\t\t\t");
            
            #line 75 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

								var model = Extensions.GetModel(param.Type, Metadata);
								foreach (var innerParam in model.Properties) { 
									if (Extensions.IsValid(innerParam.Type)) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t\t\tvar ");
            
            #line 79 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(innerParam.Name));
            
            #line default
            #line hidden
            this.Write(" = (");
            
            #line 79 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 79 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(innerParam.Name));
            
            #line default
            #line hidden
            this.Write(" == null ? \"\" : ");
            
            #line 79 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 79 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(innerParam.Name));
            
            #line default
            #line hidden
            this.Write(" + \"\");\r\n\t\t\t\t\t\t\t\t\t");
            
            #line 80 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 }
								}
							} else if (param.IsOptional && (Extensions.IsNullable(param.Type) || Extensions.Default(param.Type) == "null")) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t");
            
            #line 83 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name));
            
            #line default
            #line hidden
            this.Write(" = <");
            
            #line 83 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Extensions.HandleType(param.Type)));
            
            #line default
            #line hidden
            this.Write(">(");
            
            #line 83 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name));
            
            #line default
            #line hidden
            this.Write(" == null ? \"\" : ");
            
            #line 83 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n\t\t\t\t\t\t\t");
            
            #line 84 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 }
						}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tvar url = ");
            
            #line 86 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(url));
            
            #line default
            #line hidden
            this.Write(@";
						var _defaults = { };
						var _settings = $.extend({}, _defaults, options || {});
						for (var key in _settings) {
							if (_settings.hasOwnProperty(key)) {
								url +=  url.indexOf(""?"") == -1 ? ""?"" : ""&"";
								url += key + ""="" + _settings[key];
							}
						}
						return url;
					}


				export async function ");
            
            #line 99 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.Name.ToCamelCasing()));
            
            #line default
            #line hidden
            this.Write("Async(");
            
            #line 99 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

					foreach(var param in allParameters) {
							var paramType = Extensions.HandleType(param.Type);
						
            
            #line default
            #line hidden
            
            #line 102 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name + (Extensions.IsNullable(param.Type) || (param.IsOptional && Extensions.IsNullable(param.Type)) ? "?" : "") + ": " + paramType + (param.IsOptional && !Extensions.IsNullable(param.Type) ? " = " + Extensions.Default(param.Type) : "")));
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 102 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 }  
            
            #line default
            #line hidden
            
            #line 102 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

						if (method.BodyParameter != null) {
							var param = method.BodyParameter;
							var bodyType = Extensions.HandleType(param.Type);
						
            
            #line default
            #line hidden
            
            #line 106 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name + (Extensions.IsNullable(param.Type) || (param.IsOptional && Extensions.IsNullable(param.Type)) ? "?" : "") + ": " + bodyType + (param.IsOptional && !Extensions.IsNullable(param.Type) ? " = " + Extensions.Default(param.Type) : "")));
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 106 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(" options?: any): Promise<");
            
            #line 106 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(funcType));
            
            #line default
            #line hidden
            this.Write(">  {\r\n\r\n\t\t\t\t\tvar url = get");
            
            #line 108 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.Name));
            
            #line default
            #line hidden
            this.Write("Url(");
            
            #line 108 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

					foreach(var param in allParameters) {
            
            #line default
            #line hidden
            
            #line 109 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 109 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 }  
            
            #line default
            #line hidden
            
            #line 109 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

						if (method.BodyParameter != null) {
            
            #line default
            #line hidden
            
            #line 110 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 110 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(" options);\r\n\t\t\t\t\t");
            
            #line 111 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.Type.ToString().ToLower()=="get") {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\treturn await ApiLibrary.getCallAsync<");
            
            #line 112 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(funcType));
            
            #line default
            #line hidden
            this.Write(">(url,0);\r\n\t\t\t\t\t");
            
            #line 113 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t");
            
            #line 114 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.Type.ToString().ToLower()=="post") {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t");
            
            #line 115 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.BodyParameter?.Name==null) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tvar bodyParam = null;\r\n\t\t\t\t\t\t");
            
            #line 117 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
} else {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tvar bodyParam = {\r\n\t\t\t\t\t\t\t\t");
            
            #line 119 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 119 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t");
            
            #line 121 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\treturn await ApiLibrary.postCallAsync<");
            
            #line 123 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(funcType));
            
            #line default
            #line hidden
            this.Write(">(url, 0, bodyParam);\r\n\t\t\t\t\t");
            
            #line 124 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t");
            
            #line 125 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.Type.ToString().ToLower()=="put") {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t");
            
            #line 126 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.BodyParameter?.Name==null) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tvar bodyParam = null;\r\n\t\t\t\t\t\t");
            
            #line 128 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
} else {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tvar bodyParam = {\r\n\t\t\t\t\t\t\t\t");
            
            #line 130 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 130 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t");
            
            #line 132 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\treturn await ApiLibrary.putCallAsync<");
            
            #line 134 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(funcType));
            
            #line default
            #line hidden
            this.Write(">(url, 0, bodyParam);\r\n\t\t\t\t\t");
            
            #line 135 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t");
            
            #line 136 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.Type.ToString().ToLower()=="delete") {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t");
            
            #line 137 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.BodyParameter?.Name==null) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tvar bodyParam = null;\r\n\t\t\t\t\t\t");
            
            #line 139 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
} else {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tvar bodyParam = {\r\n\t\t\t\t\t\t\t\t");
            
            #line 141 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 141 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t");
            
            #line 143 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\treturn await ApiLibrary.postCallAsync<");
            
            #line 145 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(funcType));
            
            #line default
            #line hidden
            this.Write(">(url, 0, bodyParam);\r\n\t\t\t\t\t");
            
            #line 146 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t}\r\n\t\t\t\t");
            
            #line 148 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

				var extraName = "";
				if (method.Name.ToCamelCasing() == "delete") {
					extraName = "Item";
				}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\texport async function ");
            
            #line 154 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.Name.ToCamelCasing() + extraName));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 154 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

					foreach(var param in allParameters) {
							var paramType = Extensions.HandleType(param.Type);
						
            
            #line default
            #line hidden
            
            #line 157 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name + (Extensions.IsNullable(param.Type) || (param.IsOptional && Extensions.IsNullable(param.Type)) ? "?" : "") + ": " + paramType + (param.IsOptional && !Extensions.IsNullable(param.Type) ? " = " + Extensions.Default(param.Type) : "")));
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 157 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 }  
            
            #line default
            #line hidden
            
            #line 157 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

						if (method.BodyParameter != null) {
							var param = method.BodyParameter;
							var bodyType = Extensions.HandleType(param.Type);
						
            
            #line default
            #line hidden
            
            #line 161 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name + (Extensions.IsNullable(param.Type) || (param.IsOptional && Extensions.IsNullable(param.Type)) ? "?" : "") + ": " + bodyType + (param.IsOptional && !Extensions.IsNullable(param.Type) ? " = " + Extensions.Default(param.Type) : "")));
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 161 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(" options?: any, callback?:(data:");
            
            #line 161 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(funcType));
            
            #line default
            #line hidden
            this.Write(")=>void): Promise<void>  {\r\n\r\n\t\t\t\t\tvar url = get");
            
            #line 163 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.Name));
            
            #line default
            #line hidden
            this.Write("Url(");
            
            #line 163 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

					foreach(var param in allParameters) {
            
            #line default
            #line hidden
            
            #line 164 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(param.Name));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 164 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 }  
            
            #line default
            #line hidden
            
            #line 164 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"

						if (method.BodyParameter != null) {
            
            #line default
            #line hidden
            
            #line 165 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write(",");
            
            #line 165 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write(" options);\r\n\t\t\t\t\t");
            
            #line 166 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.Type.ToString().ToLower()=="get") {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\tvar data = await ApiLibrary.getCallAsync<");
            
            #line 167 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(funcType));
            
            #line default
            #line hidden
            this.Write(">(url,0);\r\n\t\t\t\t\t");
            
            #line 168 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t");
            
            #line 169 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.Type.ToString().ToLower()=="post") {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t");
            
            #line 170 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.BodyParameter?.Name==null) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tvar bodyParam = null;\r\n\t\t\t\t\t\t");
            
            #line 172 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
} else {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tvar bodyParam = {\r\n\t\t\t\t\t\t\t\t");
            
            #line 174 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 174 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t");
            
            #line 176 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\tvar data = await ApiLibrary.postCallAsync<");
            
            #line 178 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(funcType));
            
            #line default
            #line hidden
            this.Write(">(url, 0, bodyParam);\r\n\t\t\t\t\t");
            
            #line 179 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t");
            
            #line 180 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.Type.ToString().ToLower()=="put") {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t");
            
            #line 181 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.BodyParameter?.Name==null) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tvar bodyParam = null;\r\n\t\t\t\t\t\t");
            
            #line 183 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
} else {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tvar bodyParam = {\r\n\t\t\t\t\t\t\t\t");
            
            #line 185 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 185 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t");
            
            #line 187 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\tvar data = await ApiLibrary.putCallAsync<");
            
            #line 189 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(funcType));
            
            #line default
            #line hidden
            this.Write(">(url, 0, bodyParam);\r\n\t\t\t\t\t");
            
            #line 190 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t");
            
            #line 191 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.Type.ToString().ToLower()=="delete") {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t");
            
            #line 192 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
if (method.BodyParameter?.Name==null) {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tvar bodyParam = null;\r\n\t\t\t\t\t\t");
            
            #line 194 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
} else {
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\tvar bodyParam = {\r\n\t\t\t\t\t\t\t\t");
            
            #line 196 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write(": ");
            
            #line 196 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(method.BodyParameter.Name));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t");
            
            #line 198 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\tvar data = await ApiLibrary.postCallAsync<");
            
            #line 200 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(funcType));
            
            #line default
            #line hidden
            this.Write(">(url, 0, bodyParam);\r\n\t\t\t\t\t");
            
            #line 201 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\tif (callback) {\r\n\t\t\t\t\t\tcallback(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t");
            
            #line 208 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" \r\n\t\t}\r\n\t");
            
            #line 210 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write(" \r\n\r\n}\r\n");
            
            #line 213 "P:\External\WebApiProxy\WebApiProxy.Typescript.Core\WebApi\TsProxyTemplate.tt"
}
catch (Exception ex) {
	var i = 0;
}

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "15.0.0.0")]
    public class TsProxyTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
